@using YtStream.Enums;
@using YtStream.Services.Mp3;
@using YtStream.Services;
@inject ConfigService _configService
@model ConfigModel
@{
    ViewData["Title"] = "Settings";
    var ErrMsg = (string)ViewBag.ErrorMessage;
    string FfmpegVersion = ViewData["FFMpegVersion"] as string;
    string ytdlVersion = ViewData["YtDlVersion"] as string;
    string ytdlUA = ViewData["YtDlUa"] as string;

    if (Model == null)
    {
        try
        {
            _configService.GetConfiguration();
            ErrMsg = "Configuration is null";
        }
        catch (Exception ex)
        {
            ErrMsg = ex.Message;
        }
    }
}
<h1>Settings</h1>

@if (Model != null)
{
    if (!Model.IsValid() || !string.IsNullOrEmpty(ErrMsg))
    {
        <div class="alert alert-danger">
            <p>Before you can properly use this application you need to fix the errors listed below</p>
            <ul>
                @if (!string.IsNullOrEmpty(ErrMsg))
                {
                    <li>@ErrMsg</li>
                }
                @foreach (var Err in Model.GetValidationMessages())
                {
                    <li>@Err</li>
                }
            </ul>
        </div>
    }
    else
    {
        <div class="alert alert-info">Configuration is valid</div>
    }
}
else
{
    <div class="alert alert-danger">
        Your configuration is damaged.<br />
        Error: <code>@ErrMsg</code>
    </div>
}
<form asp-action="Config" method="post">
    <h2>Conversion tools</h2>
    <div class="row">
        <div class="col-md-6 form-group">
            <label>
                FFmpeg path
            </label>
            <input type="text" asp-for="FfmpegPath" class="form-control" />
            <a href="https://ffmpeg.org/download.html" target="_blank" rel="noreferrer nofollow noopener">Download</a><br />
            Selected version: <i>@FfmpegVersion</i>
        </div>
        <div class="col-md-6 form-group">
            <label>
                Youtube-dl path
            </label>
            <input type="text" asp-for="YoutubedlPath" class="form-control" />
            <a href="https://gitload.net/yt-dlp/yt-dlp" target="_blank" rel="noreferrer nofollow noopener">Download</a><br />
            Selected version: <i>@ytdlVersion</i><br />
            User agent: <i>@ytdlUA</i>
        </div>
    </div>

    <h2>Youtube</h2>
    <div class="row">
        <div class="col-md-6 form-group">
            <label>
                Youtube API key
            </label>
            <input type="password" asp-for="YtApiKey" class="form-control"
                   value="@Model.YtApiKey" placeholder="YouTube API Key" />
            <i>
                This is optional. If you don't set this then the URL builder will be unavailable,
                but streaming playlists will still work.
                <a href="https://developers.google.com/youtube/v3/getting-started"
                   target="_blank" rel="noreferrer nofollow noopener">Get an API key here</a>
            </i>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <h2>Cache</h2>
            <div class="form-group">
                <label>
                    <input type="checkbox" asp-for="UseCache" value="True" />
                    Use cache
                </label>
            </div>
            <div class="form-group">
                <label>
                    Cache path
                </label>
                <input type="text" asp-for="CachePath" class="form-control" />
            </div>
            <div class="form-group">
                <label>
                    Max cache time for MP3 files (in seconds)
                </label>
                <input type="number" min="0" asp-for="CacheMp3Lifetime" class="form-control" />
                <i>
                    Zero indicates to cache forever.
                    For MP3, this is the preferred option because they never change on their own.
                </i>
            </div>
        </div>
        <div class="col-md-6">
            <h2>SponsorBlock</h2>
            <div class="form-group">
                <label>
                    <input type="checkbox" asp-for="UseSponsorBlock" value="True" />
                    Use SponsorBlock
                </label>
                <i>
                    Even if enabled, clients have the ability to disable this on a per-stream basis
                </i>
            </div>
            <div class="form-group">
                <label>
                    SponsorBlock server
                </label>
                <input type="text" asp-for="SponsorBlockServer" class="form-control" />
            </div>
            <div class="form-group">
                <label>
                    Max cache time for SponsorBlock files (in seconds)
                </label>
                <input type="number" min="0" asp-for="CacheSBlockLifetime" class="form-control" />
                <i>
                    Zero indicates to cache forever.
                    Recommendation is between 1 (86400) and 7 (@(86400*7)) days.
                    Only successful responses with at least one range are cached.
                </i>
            </div>
        </div>
    </div>

    <h2>Streaming options</h2>
    <div class="row">
        <div class="col-md-6 form-group">
            <label>
                <input type="checkbox" asp-for="RequireAccount" value="True" />
                Require account to stream
            </label><br />
            <i>
                If set, people need to either be logged in or use a streaming key.
                If disabled, anyone can stream media from this server.
            </i>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <label>
                <input type="checkbox" asp-for="MarkAds" value="True" />
                Mark ads in MP3 header
            </label>
        </div>
    </div>
    <p class="auto-help">
        <i>
            This sets the "private" bit in the MP3 headers that contain ads.
            This would allow an application to automatically mark them to the user,
            or to silence/remove them.
            If this option is unset, the "private" bit will be cleared in all MP3 headers.
        </i>
    </p>
    <div class="row">
        <div class="col-md-6 form-group">
            <label>
                <input type="checkbox" asp-for="AdminAds" value="True" />
                Play ads for administrators too
            </label><br />
            <i>
                Ads are normally not played when an administrator account streams media.
                You can enable ads here. Most useful for testing purposes.
            </i>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <label>
                Maximum number of video ids per stream
            </label>
            <input type="number" min="0" max="1000" asp-for="MaxStreamIds" class="form-control" />
            Zero indicates no limit.
        </div>
    </div>
    <p class="auto-help">
        <i>
            Once this limit is reached,
            the system stops adding more ids to the stream list.
            Regardless of this setting, there's a hard limit of
            @YoutubeDlService.MaxPlaylistEntries items per individual playlist.
            This will stop most bad people from overloading the system
            by trying to stream multiple huge playlists.
            There is no exception for administrators either.
        </i>
    </p>

    <div class="row">
        <div class="col-md-4 form-group">
            <label>Bitrate</label>
            <select asp-for="AudioBitrate" asp-items="Tools.HtmlEnumSwapList<Mp3BitrateEnum>()" class="form-control"></select>
            <i>Default recommended bitrate: @Tools.SwapEnumName(Mp3BitrateEnum.kbps192)</i>
        </div>
        <div class="col-md-4 form-group">
            <label>Frequency</label>
            <select asp-for="AudioFrequency" asp-items="Tools.HtmlEnumSwapList<Mp3FrequencyEnum>()" class="form-control"></select>
            <i>Default recommended frequency: @Tools.SwapEnumName(Mp3FrequencyEnum.Hz44100)</i>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 form-group text-danger">
            <p>
                <b>&#9888;&#65039; CAUTION &#9888;&#65039;</b><br />
                After changing the frequency or bitrate you must clear the MP3 cache if it's enabled and not empty.
                Many browsers and devices have trouble playing streams that are made up of files with the old and new settings mixed.
                The player may simply stop at the first time the value change is encountered in the stream,
                or the time may stop counting up or trigger other weird behavior.
                Consider locking the application before changing audio settings
                if this application is already in active use.
            </p>
            <p>
                <b>QUALITY</b><br />
                Increasing the values will not yield better quality,
                simply because the material from Youtube is not of better quality,
                but it will consume more bandwidth.
                You can reduce the Bitrate to @Tools.SwapEnumName(Mp3BitrateEnum.kbps128) if bandwidth is a concern
                without sacrificing audio quality too much.
                If you plan on using this system purely for voice content and want to save as much bandwidth as possible,
                you can reduce the bitrate to around @Tools.SwapEnumName(Mp3BitrateEnum.kbps64)
                and still get acceptable results.
            </p>
            <p>
                <b>ADS</b><br />
                If you are using ads, you must re-upload them all.
                It's recommended that you remove all ads from the system before changing the audio settings
                or you risk people being unable to stream at all until all ads are re-uploaded.
            </p>
        </div>
    </div>

    <h2>Accounts</h2>
    <div class="row">
        <div class="col-md-4 form-group">
            <label>
                <input type="checkbox" asp-for="PublicRegistration" value="True" />
                Enable public account registration
            </label><br />
            <i>If disabled, ony the admin can create accounts</i>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4 form-group">
            <label>
                Maximum number of streaming keys per user
            </label>
            <input type="number" min="0" asp-for="MaxKeysPerUser" class="form-control" />
            <i>Zero indicates to not impose a limit</i>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4 form-group">
            <input type="submit" value="Send" class="btn btn-primary" />
        </div>
    </div>
</form>
<p>
    <a asp-action="Index" class="btn btn-link">Go back</a>
</p>
@section Scripts
{
    <script src="~/js/config.view.js" asp-append-version="true" defer></script>
}