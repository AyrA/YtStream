@{
    ViewData["Title"] = "Usage instructions";
    var Settings = (ConfigModel)ViewBag.Settings;
}
<h1>Playback</h1>
<p>
    For playback in your browser or on your mobile device,
    the easiest and most comfortable way is to use
    <a asp-action="Player">the media player</a>.
    It supports playback of all videos in a single playlist.
    If you have a headset or keyboard with media keys, those should work too.
    The playback list repeats indefinitely, and additionally can be shuffled.
    The shuffle algorithm guarantees that every item plays exactly once before the list is reshuffled.<br />
    Note that the playlist information is cached for an hour to not bug the YouTube API too much.
</p>

<h1>Streaming</h1>
<p>
    Manual streaming is recommended if you want to stream videos and/or playlists as a single continuous MP3 file.
    It's also the way to go if you want to stream on a web radio device.
</p>
<p>
    The streaming system operates on the video ids and playlist ids.
    They both can be grabbed from the address bar of your browser on every youtube video.<br />
    The easiest way to use it is to use the <a asp-action="Builder">URL builder</a>,
    but you can also <a href="/swagger/">look at the API yourself</a>.
</p>

<h2>Restrictions</h2>
<p>
    You can only stream videos and playlists that can be viewed publicly and are not age restricted.
    The administrator of this system may also put restrictions in place
    about the video length or the number of videos in a single stream.<br />
    You can stream content that is public but unlisted.
</p>

<h2>Stream keys</h2>
@if (Settings.RequireAccount)
{
    <p>
        The operator of this system has disabled anonymous streaming.
        For the stream URLs to work you either have to be logged in,
        or add a stream key to the URL.
        Visit your <a asp-action="Index" asp-controller="Account">key management page</a> to get keys.
    </p>
}
else
{
    <p>
        The server is currently configured to permit anonymous streaming.
        Supplying a key is not necessary.
    </p>
}


<h2>Video id</h2>
<p>
    The video id is an 11 character string following the <code>v=</code> of a video URL.<br />
    Example: <code>https://www.youtube.com/watch?v=<b>dQw4w9WgXcQ</b></code>
</p>

<h2>Playlist id</h2>
<p>
    The playlist id comes in two versions depending on how old the playlist is.
    Both of them are fairly long and can be identified because they start with "PL"<br />
    Format: <code>https://www.youtube.com/playlist?list=PL<b>&lt;many_characters&gt;</b></code>
</p>

<h2>Multiple ids</h2>
<p>
    You can supply multiple ids to a stream function to stream them as a single audio stream.
    Use commas to separate them in the URL.<br />
    You can supply the same id multiple times to repeat it.
    Playlist ids and video ids can be mixed.
</p>
@if (Settings.MaxStreamIds > 0)
{
    <p class="alert alert-info">
        The owner of this server has limited the number of ids you can have in a single stream.
        A maximum is set to @Settings.MaxStreamIds<br />
        Note that this takes into account the number of videos in playlists.
        The system will stop parsing video ids and expanding playlist ids when the limit has been reached.
    </p>
}
